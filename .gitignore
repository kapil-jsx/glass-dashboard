# ===================================================================
# Comprehensive .gitignore for Node.js / Next.js Projects
# ===================================================================

# ## Dependencies
# Package manager dependency folders. These are installed via `npm install` or `yarn install`.
node_modules/
.npm/
jspm_packages/

# ## Build & Distribution Folders
# Generated by build processes. Contains compiled, optimized, or bundled code.
build/
dist/
.out/
.vercel/
.netlify/

# ## Next.js Specific
# This folder is automatically generated by Next.js for builds and caching.
# This was the folder causing issues in your original screenshot.
.next/

# ## Environment Variables
# IMPORTANT: These files contain sensitive secrets like API keys, database passwords.
# NEVER commit these files to your repository!
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# It's a good practice to commit an example file with placeholder values.
# The '!' character un-ignores a file that was previously ignored.
!*.env.example
!*.env.sample


# ## Log Files
# Contains logs from your application or dependencies.
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*


# ## IDE & Editor Directories
# Personal settings for your code editor. Sharing these can cause conflicts.
.vscode/
.idea/
*.sublime-project
*.sublime-workspace
*.swp
.fleet/


# ## Operating System Generated Files
# Files created by macOS, Windows, or Linux that are not part of the project.

# macOS
.DS_Store
.AppleDouble
.LSOverride
.Trashes
.Spotlight-V100
._*

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/


# ## Test & Coverage Reports
# Generated when you run tests.
coverage/
.nyc_output/


# ## Cache Files
# Cache files from various tools to speed up processes. Can be safely deleted and regenerated.
.cache/
.eslintcache
*.tsbuildinfo


# ## Temporary Files
.tmp/
tmp/